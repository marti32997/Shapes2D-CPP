<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="Cross_8cpp" kind="file" language="C++">
    <compoundname>Cross.cpp</compoundname>
    <includes refid="Cross_8h" local="yes">Cross.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/yosua/Projects/Shapes2D/Shapes2D-CPP/src/Cross.cpp</label>
        <link refid="Cross_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Shape2D.h</label>
        <link refid="Shape2D_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="10">
        <label>Point.h</label>
        <link refid="Point_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>Cross.h</label>
        <link refid="Cross_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Cross_8h" kindref="compound">Cross.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classCross_1afea59918dad0b372013b64a44d565011" kindref="member">Cross::Cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;Point,<sp/>12&gt;<sp/>&amp;vertices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;warp_space)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classShape2D" kindref="compound">Shape2D</ref>(</highlight><highlight class="stringliteral">&quot;Cross&quot;</highlight><highlight class="normal">,<sp/>warp_space),<sp/>vertices_(vertices)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShape2D_1ab06720bbaa1a78dd8da98ea0899fe6db" kindref="member">area_</ref><sp/>=<sp/><ref refid="classSquare_1a48b228fedc03dc7780041552bf24fad0" kindref="member">compute_Area</ref>();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShape2D_1a0a2936d7dbb45e83b454fccc4263126d" kindref="member">points_within_shape_</ref><sp/>=<sp/><ref refid="classSquare_1a3b60abd177002540140a76bd09ce866d" kindref="member">get_All_Point_In_Shape</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classShape2D_1a15f89a34166c3d2ce43b0635f07185e4" kindref="member">points_on_perimeter_</ref><sp/>=<sp/><ref refid="classSquare_1a44e923bbb978827dc286da11a9be8ba9" kindref="member">get_All_Point_On_Shape</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="classCross_1a0dd66e9fa5bb40f003c9651bc89b52ff" kindref="member">Cross::~Cross</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">std::string<sp/><ref refid="classCross_1af4fdc4be4b0ab401f1bc8e54cec748ff" kindref="member">Cross::to_String</ref>()</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classShape2D_1afec5ff2e6fdded2cce71ac6055aaf8c3" kindref="member">get_Name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classShape2D_1a266f289038ce2773e3b07e1f65a3554f" kindref="member">get_Contain_Warp_Space</ref>())</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WS,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NS,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/><ref refid="classShape2D_1ab06720bbaa1a78dd8da98ea0899fe6db" kindref="member">area_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Vertices<sp/>:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>i++)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>11)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertices_[i].get_X()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertices_[i].get_Y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertices_[i].get_X()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertices_[i].get_Y()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;),<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classCross_1aaabc848a55e4c8234dc64da0e650d781" kindref="member">Cross::compute_Area</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_rectangle_length<sp/>=<sp/>vertices_[0].get_X()<sp/>-<sp/>vertices_[1].get_X();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_rectangle_width<sp/>=<sp/>vertices_[1].get_Y()<sp/>-<sp/>vertices_[2].get_Y();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_rectangle_area<sp/>=<sp/>left_rectangle_length<sp/>*<sp/>left_rectangle_width;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_rectangle_length<sp/>=<sp/>vertices_[5].get_X()<sp/>-<sp/>vertices_[4].get_X();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_rectangle_width<sp/>=<sp/>vertices_[3].get_Y()<sp/>-<sp/>vertices_[4].get_Y();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_rectangle_area<sp/>=<sp/>bottom_rectangle_length<sp/>*<sp/>bottom_rectangle_width;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_rectangle_length<sp/>=<sp/>vertices_[7].get_X()<sp/>-<sp/>vertices_[6].get_X();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_rectangle_width<sp/>=<sp/>vertices_[8].get_Y()<sp/>-<sp/>vertices_[7].get_Y();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_rectangle_area<sp/>=<sp/>right_rectangle_length<sp/>*<sp/>right_rectangle_width;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_rectangle_length<sp/>=<sp/>vertices_[10].get_X()<sp/>-<sp/>vertices_[11].get_X();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_rectangle_width<sp/>=<sp/>vertices_[10].get_Y()<sp/>-<sp/>vertices_[9].get_Y();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_rectangle_area<sp/>=<sp/>top_rectangle_length<sp/>*<sp/>top_rectangle_width;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>middle_rectangle_length<sp/>=<sp/>vertices_[9].get_X()<sp/>-<sp/>vertices_[0].get_X();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>middle_rectangle_width<sp/>=<sp/>vertices_[0].get_Y()<sp/>-<sp/>vertices_[3].get_Y();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>middle_rectangle_area<sp/>=<sp/>middle_rectangle_length<sp/>*<sp/>middle_rectangle_width;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum_of_area<sp/>=<sp/>left_rectangle_area<sp/>+<sp/>bottom_rectangle_area<sp/>+<sp/>right_rectangle_area<sp/>+<sp/>top_rectangle_area<sp/>+<sp/>middle_rectangle_area;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_of_area;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCross_1a91965ea6be0d5511e946def6ab9f950a" kindref="member">Cross::is_Point_In_Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>within_horizontal_rectangle<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[1].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[8].get_X()<sp/>&amp;&amp;<sp/>y<sp/>&gt;<sp/>vertices_[2].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[8].get_Y());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>within_vertical_rectangle<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[0].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[9].get_X()<sp/>&amp;&amp;<sp/>y<sp/>&gt;<sp/>vertices_[4].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[11].get_Y());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(within_horizontal_rectangle<sp/>||<sp/>within_vertical_rectangle)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCross_1a86cce2ebb9625d61e68e16e872003a51" kindref="member">Cross::is_Point_On_Shape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v0_v1<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[1].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[0].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[0].get_Y());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v1_v2<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[2].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[1].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[1].get_X());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v2_v3<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[2].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[3].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[2].get_Y());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v3_v4<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[4].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[3].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[3].get_X());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v4_v5<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[4].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[5].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[4].get_Y());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v5_v6<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[5].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[6].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[5].get_X());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v6_v7<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[6].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[7].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[6].get_Y());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v7_v8<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[7].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[8].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[7].get_X());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v8_v9<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[9].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[8].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[8].get_Y());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v9_v10<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[9].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[10].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[9].get_X());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v10_v11<sp/>=<sp/>(x<sp/>&gt;<sp/>vertices_[11].get_X()<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>vertices_[10].get_X()<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>vertices_[10].get_Y());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>between_v11_v0<sp/>=<sp/>(y<sp/>&gt;<sp/>vertices_[0].get_Y()<sp/>&amp;&amp;<sp/>y<sp/>&lt;<sp/>vertices_[11].get_Y()<sp/>&amp;&amp;<sp/>x<sp/>==<sp/>vertices_[11].get_X());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>within_any_of_line<sp/>=<sp/>(between_v0_v1<sp/>||<sp/>between_v1_v2<sp/>||<sp/>between_v2_v3<sp/>||<sp/>between_v3_v4<sp/>||<sp/>between_v4_v5<sp/>||<sp/>between_v5_v6<sp/>||<sp/>between_v6_v7<sp/>||<sp/>between_v7_v8<sp/>||<sp/>between_v8_v9<sp/>||<sp/>between_v9_v10<sp/>||<sp/>between_v10_v11<sp/>||<sp/>between_v11_v0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(within_any_of_line)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">std::vector&lt;Point&gt;<sp/><ref refid="classCross_1ab7c84529a26bc140ff34e9105f62e80f" kindref="member">Cross::get_All_Point_In_Shape</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>points_within_shape;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>vertices_[1].get_X()<sp/>+<sp/>1;<sp/>x<sp/>&lt;<sp/>vertices_[8].get_X();<sp/>x++)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>vertices_[4].get_Y()<sp/>+<sp/>1;<sp/>y<sp/>&lt;<sp/>vertices_[11].get_Y();<sp/>y++)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCross_1a91965ea6be0d5511e946def6ab9f950a" kindref="member">is_Point_In_Shape</ref>(x,<sp/>y))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points_within_shape.push_back(<ref refid="classPoint" kindref="compound">Point</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>points_within_shape;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">std::vector&lt;Point&gt;<sp/><ref refid="classCross_1a5acb3670b94f88f980f25b087ffad579" kindref="member">Cross::get_All_Point_On_Shape</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point&gt;<sp/>points_on_perimeter;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>vertices_[1].get_X();<sp/>x<sp/>&lt;=<sp/>vertices_[8].get_X();<sp/>x++)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>vertices_[4].get_Y();<sp/>y<sp/>&lt;=<sp/>vertices_[11].get_Y();<sp/>y++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCross_1a86cce2ebb9625d61e68e16e872003a51" kindref="member">is_Point_On_Shape</ref>(x,<sp/>y))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points_on_perimeter.push_back(<ref refid="classPoint" kindref="compound">Point</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>points_on_perimeter;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a94e96427ebd50d8e21875a6fdd05bb80" kindref="member">Cross::get_Vertex_0</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[0];<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a3882718f5f11007bf5882502e6bf4170" kindref="member">Cross::get_Vertex_1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[1];<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a0157da4981fddc06ffe87e7c689697ea" kindref="member">Cross::get_Vertex_2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[2];<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a2809bdbb081e0db8280c66f274276234" kindref="member">Cross::get_Vertex_3</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[3];<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a25ca09d8d4b153789836186d8dfd8208" kindref="member">Cross::get_Vertex_4</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[4];<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1adebdf14d932d31888946d3722571c52e" kindref="member">Cross::get_Vertex_5</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[5];<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a7c7a26d37528b14e3fe562587598ab6e" kindref="member">Cross::get_Vertex_6</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[6];<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1ae0ee097fcac8b5b4c6b54138e8eeea09" kindref="member">Cross::get_Vertex_7</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[7];<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a86e97ba7ceef5f095a285aa61b85940d" kindref="member">Cross::get_Vertex_8</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[8];<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a948d15523dd05ef05053b4c0c10b4e2c" kindref="member">Cross::get_Vertex_9</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[9];<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a2e49be393ed748ae7c656855e9af7fcd" kindref="member">Cross::get_Vertex_10</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[10];<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPoint" kindref="compound">Point</ref><sp/>&amp;<ref refid="classCross_1a56f19fb71ca977088d0bb85181e0ed39" kindref="member">Cross::get_Vertex_11</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;vertices_[11];<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/yosua/Projects/Shapes2D/Shapes2D-CPP/src/Cross.cpp"/>
  </compounddef>
</doxygen>
